Line 1–5 — Importing packages required to find the most dominant colors in an image.
Line 7 — Defining the no. of clusters for the KMeans algorithm.
Line 9 — Reading our input image.
Line 10 — Keeping a copy of it for future use.
Line 11 — Printing its shape.
Line 13 — Resizing our image to get results fast.
Line 14 — Printing resized image shape.
Line 16 — Flattening the image. In this step, we are just keeping all the columns of the image after each other to make just one column out of it. 
                After this step, we will be left with just 1 column and rows equal to the no. of pixels in the image.
Line 17 — Let’s check the shape of the flattened image now.
Line 19 — Making a KMeans Clustering object with n_clusters set to 3 as declared in Line 7.
Line 20 — Fit our image in Kmeans Clustering Algorithm. In this step, the flattened image is working as an array containing all the pixel colors of the image. 
                These pixel colors will now be clustered into 3 groups. 
                These groups will have some centroids which we can think of as the major color of the cluster.
Line 22 — We are extracting these cluster centers. Now we know that these 3 colors are the dominant colors of the image but still, 
                we don’t know the extent of each color’s dominance.
Line 24 — We are calculating the dominance of each dominant color.
                np.unique(kmeans.labels_,return_counts=True), this statement will return an array with 2 parts:
                - First part will be the predictions, means to which cluster that pixel belongs 
                - Second part will contain the counts like [200,130,310] where 200 depicts 
                the no. of pixels belonging to class 0 or cluster 0(our indexing starts from 0), and so on, 
                and then we are simply dividing that array by the total no. of pixels, 
                so the output is a percentage array.
Line 25 — We are zipping percentages and colors together. It will consist of 3 tuples. 
                For example, the first tuple is (0.1,(120,0,150)) where first part of the tuple (0.1) 
                is the percentage and (120,0,150) is the color.
Line 26 — Sort this zip object in descending order. Now the first element in this sorted object will 
                be the percentage of the most dominant colors in the image and the color itself.
Line 28–36 — We are plotting blocks of dominant colors.
Line 38–54 — We are plotting the following bar.
Line 56–72 — We are creating the final result.
Line 79 - We are saving the output image.
